<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LeetCodeDairies on JoyBoy&#39;s blog</title>
    <link>https://zyooo.github.io/leetcodedairy/</link>
    <description>Recent content in LeetCodeDairies on JoyBoy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>zyooooo@126.com (JoyBoy)</managingEditor>
    <webMaster>zyooooo@126.com (JoyBoy)</webMaster>
    <lastBuildDate>Mon, 28 Feb 2022 07:50:01 +0800</lastBuildDate>
    
	<atom:link href="https://zyooo.github.io/leetcodedairy/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2022-02-28</title>
      <link>https://zyooo.github.io/leetcodedairy/20220228/</link>
      <pubDate>Mon, 28 Feb 2022 07:50:01 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220228/</guid>
      <description>1601.最多可达成的换楼请求目的 hard 对于每个选择, 都有选或者不选两个操作, delta数组记录每栋楼的员工变化量, 以及变量cnt记录被选择的请</description>
    </item>
    
    <item>
      <title>第282场周赛T3</title>
      <link>https://zyooo.github.io/leetcodedairy/20220227/</link>
      <pubDate>Sun, 27 Feb 2022 17:28:07 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220227/</guid>
      <description>这道题用O(N^2)的解法会超时, 所以要想办法降低时间复杂度, 所以使用二分法, 但是这里二分的不是time数组, 而是时间, 而时间的区间如何取定</description>
    </item>
    
    <item>
      <title>2022-02-24</title>
      <link>https://zyooo.github.io/leetcodedairy/20220224/</link>
      <pubDate>Thu, 24 Feb 2022 21:54:42 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220224/</guid>
      <description>开始是直接遍历的方法得到数字, 后来想着如果是严格按照一个形式的话, 那么 一个复数中只会出现一个 &amp;lsquo;+&amp;rsquo; 并且将虚部和实部分割, 可以利用这个去直接得到a</description>
    </item>
    
    <item>
      <title>2022-02-08</title>
      <link>https://zyooo.github.io/leetcodedairy/20220208/</link>
      <pubDate>Sun, 20 Feb 2022 20:07:20 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220208/</guid>
      <description>1001.网格照明 hard 2022.02.08 数据规模太大了, 原本想着硬模拟的后来还是放弃了 打算用map去存储行列和两个对角的情况, 但是又不知道怎么去表示同一条对角</description>
    </item>
    
    <item>
      <title>2022-01-09</title>
      <link>https://zyooo.github.io/leetcodedairy/20220109/</link>
      <pubDate>Sun, 09 Jan 2022 20:34:58 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220109/</guid>
      <description>田忌赛马,打不过就送人头 代码逻辑 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 n := len(nums1) sort.Ints(nums1) //田忌的</description>
    </item>
    
    <item>
      <title>2022-01-09</title>
      <link>https://zyooo.github.io/leetcodedairy/20220108/</link>
      <pubDate>Sun, 09 Jan 2022 20:34:54 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220108/</guid>
      <description>滑动窗口问题 1 2 3 4 5 6 7 8 9 10 int left = 0, right = 0 for right &amp;lt; len(s) { //增大窗口 window.add(s[right]) right++ for window needs shrink{ window.remove(s[left]) left++ } } O(N) 框架 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23</description>
    </item>
    
    <item>
      <title>2022-01-09</title>
      <link>https://zyooo.github.io/leetcodedairy/20220107/</link>
      <pubDate>Sun, 09 Jan 2022 20:34:51 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220107/</guid>
      <description>二分搜索 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 //搜素左侧边界 func left_bound(nums []int, target int){ if len(nums) == 0 { return -1 } left, right :=</description>
    </item>
    
    <item>
      <title>2022-01-06</title>
      <link>https://zyooo.github.io/leetcodedairy/20220106/</link>
      <pubDate>Thu, 06 Jan 2022 11:18:06 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220106/</guid>
      <description>15.三数之和 穷举,确定了第一个数字之后, 剩下两个数字就是 target = target - nums[i] 的twoSum问题 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27</description>
    </item>
    
    <item>
      <title>2022-01-05</title>
      <link>https://zyooo.github.io/leetcodedairy/20220105/</link>
      <pubDate>Wed, 05 Jan 2022 07:49:09 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220105/</guid>
      <description>1576.替换所有的问号 1 2 3 4 5 6 7 8 9 10 11 12 13 14 func modifyString(s string) string { data := []byte(s) for i := 0; i &amp;lt; len(data); i++ { if data[i] == &amp;#39;?&amp;#39; { for b := byte(&amp;#39;a&amp;#39;); b &amp;lt;= &amp;#39;c&amp;#39;; b++ { if !(i &amp;gt; 0 &amp;amp;&amp;amp; data[i-1] == b || i &amp;lt; len(data)-1 &amp;amp;&amp;amp;</description>
    </item>
    
    <item>
      <title>2022-01-04</title>
      <link>https://zyooo.github.io/leetcodedairy/20220104/</link>
      <pubDate>Tue, 04 Jan 2022 07:46:10 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220104/</guid>
      <description>19.删除链表的倒数第N个节点 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 /** * Definition for singly-linked list. * type ListNode struct { * Val int * Next *ListNode * } */ func removeNthFromEnd(head *ListNode, n int) *ListNode { dummy := new(ListNode)</description>
    </item>
    
    <item>
      <title>2022-01-03</title>
      <link>https://zyooo.github.io/leetcodedairy/20220103/</link>
      <pubDate>Mon, 03 Jan 2022 18:29:12 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20220103/</guid>
      <description>1185.一周中的第几天 难度简单92 给你一个日期，请你设计一个算法来判断它是对应一周中的哪一天。 输入为三个整数：day、month 和 year</description>
    </item>
    
    <item>
      <title>2021-11-17</title>
      <link>https://zyooo.github.io/leetcodedairy/20211117/</link>
      <pubDate>Wed, 17 Nov 2021 12:15:12 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20211117/</guid>
      <description>318.最大单词长度乘积 1 2 3 4 5 给定一个字符串数组 words，找到 length(word[i]) * length(word[j]) 的最大值，并且这两个单词不含有公共字母。你可以认为每个单词只包含小</description>
    </item>
    
    <item>
      <title>Day6-2021-11-15</title>
      <link>https://zyooo.github.io/leetcodedairy/20211115/</link>
      <pubDate>Mon, 15 Nov 2021 10:58:22 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20211115/</guid>
      <description>319.灯泡开关 @脑筋急转弯 1 2 3 4 5 6 7 8 9 初始时有 n 个灯泡处于关闭状态。第一轮，你将会打开所有灯泡。接下来的第二轮，你将会每两个灯泡关闭</description>
    </item>
    
    <item>
      <title>2021-11-05</title>
      <link>https://zyooo.github.io/leetcodedairy/20211105/</link>
      <pubDate>Fri, 05 Nov 2021 12:21:38 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20211105/</guid>
      <description>重塑矩阵 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 在 MATLAB 中，有一个非常有用的函数 reshape ，它可以将一个 m x n 矩阵重塑为另一个大小不同（r x c）的新矩阵，但保</description>
    </item>
    
    <item>
      <title>2021-11-04</title>
      <link>https://zyooo.github.io/leetcodedairy/20211104/</link>
      <pubDate>Thu, 04 Nov 2021 20:40:11 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20211104/</guid>
      <description>两个数组的交集 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 给定两个数组，编写一个函数来计算它们的交集。 示例 1： 输入：nums1 = [1,2,2,1], nums2 = [2,2] 输出</description>
    </item>
    
    <item>
      <title>2021-11-03</title>
      <link>https://zyooo.github.io/leetcodedairy/20211103/</link>
      <pubDate>Wed, 03 Nov 2021 19:59:17 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20211103/</guid>
      <description>合并两个有序数组 给你两个按 非递减顺序 排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。 请你 合并 nums2 到 nums1 中，使合并后</description>
    </item>
    
    <item>
      <title>2021-10-31</title>
      <link>https://zyooo.github.io/leetcodedairy/20211031/</link>
      <pubDate>Sun, 31 Oct 2021 21:22:51 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20211031/</guid>
      <description>最大子序和 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。 1 2 3 4 示例: 输入：nums = [-2,1,-3,4,-1,2,1,-5,4] 输出：</description>
    </item>
    
    <item>
      <title>2021.10.08</title>
      <link>https://zyooo.github.io/leetcodedairy/20211008/</link>
      <pubDate>Sat, 09 Oct 2021 11:35:50 +0800</pubDate>
      <author>zyooooo@126.com (JoyBoy)</author>
      <guid>https://zyooo.github.io/leetcodedairy/20211008/</guid>
      <description>1.旅行终点站 简单 2021.10.08 给你一份旅游线路图，该线路图中的旅行线路用数组 paths 表示，其中 paths[i] = [cityAi, cityBi] 表示该线路将会从 cityAi 直接前往 cityBi 。请你找出这次旅行的终点站</description>
    </item>
    
  </channel>
</rss>